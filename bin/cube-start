#!/usr/bin/env node
const path = require('path');
const cmd = require('commander');
const Cube = require('../index');

cmd
  .option('--http-path [value]', 'the http path prefix, i.e `http://localhost/res/js/`, prefix -> `/res/js/`')
  .option('-p, --port [value]', 'server port')
  .option('-R, --remote [value]', 'set remote option')
  .option('--built', 'if code in root path already built, set this flag')
  .option('-s --static', 'run as a pure simple static server')
  .option('--cache', 'forbidden cache')
  .parse(process.argv);

let args = cmd;
let rootPath = cmd.args[0];
let httpPath = args.httpPath || '/';
let root;

if (/^(\/|\w:\\)/.test(rootPath)) {
  root = rootPath;
} else {
  root = path.join(process.cwd(), rootPath || '');
}

let cubeOpt = {
  rootPath: root,
  httpPath: httpPath,
  remote: args.remote,
  cache: args.cache || true,
};

let cube = new Cube(cubeOpt);
let servOpt = {
  port: args.port || 8008,
};

Cube.server(cube, servOpt)

/**
server({
  root: root,
  port: args.port ? args.port : 9999,
  router: args.router || '/',
  httpPath: args.prefix || args.resbase,
  remote: args.remote,
  service: true,
  built: args.built,
  static: args.static,
  // passUnknowExt: true,
  optimize: args.optimize,
  devCache: args.cache,
  cleanCache: args.cleanCache
});
*/